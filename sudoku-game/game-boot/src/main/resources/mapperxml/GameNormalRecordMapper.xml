<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zumin.sudoku.game.mapper.GameNormalRecordMapper">
  <resultMap id="BaseResultMap" type="com.zumin.sudoku.game.pojo.GameNormalRecord">
    <!--@mbg.generated-->
    <!--@Table game_normal_record-->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="answer" jdbcType="CHAR" property="answer"/>
    <result column="situation" jdbcType="TINYINT" property="situation"/>
    <result column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="record_id" jdbcType="BIGINT" property="recordId"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, answer, situation, user_id, record_id
  </sql>

  <resultMap id="GameNormalRecordResultForHistoryMap"
    type="com.zumin.sudoku.game.pojo.GameNormalRecordResultForHistory">
    <result column="answer" property="answer"/>
    <result column="situation" property="situation"/>
    <association property="gameRecordResult" javaType="com.zumin.sudoku.game.pojo.GameRecordResultForHistory">
      <result column="matrix" property="matrix"/>
      <result column="holes" property="holes"/>
      <result column="start_time" property="startTime"/>
      <result column="end_time" property="endTime"/>
      <result column="game_level_name" property="gameLevelName"/>
    </association>
  </resultMap>

  <sql id="SelectGameRecordWithUser">
    select nr.id as `normal_record_id`,
           nr.answer,
           nr.situation,
           r.id  as `record_id`,
           r.matrix,
           r.holes,
           r.start_time,
           r.end_time,
           r.level_id,
           u.id  as `user_id`,
           u.username,
           u.nickname,
           u.enabled
    from game_normal_record nr
           inner join game_record r on r.id = nr.record_id
           inner join sys_user u on u.id = nr.user_id
  </sql>

  <sql id="SelectGameRecordWithLevel">
    select nr.answer,
           nr.situation,
           nr.user_id,
           r.id   as game_record_id,
           r.matrix,
           r.holes,
           r.start_time,
           r.end_time,
           l.name as game_level_name
    from game_normal_record nr
           inner join game_record r on r.id = nr.record_id
           inner join game_level l on r.level_id = l.id
  </sql>

  <sql id="SelectRankLimit">
    select any_value(`data`) as data, `level_id` as game_level_id, any_value(`username`) as username, any_value(`rn`) as rn
    from tmp
    where
    rn  <![CDATA[<=]]> ${limitNumber}
  </sql>

  <select id="selectAverageSpendTimeRankLimit" resultType="com.zumin.sudoku.game.pojo.RankItemBO">
    WITH game_record_merge_user as (
    <include refid="SelectGameRecordWithUser"/>
    ) ,
      tmp as (
        select user_id,
               level_id,
               username,
               avg(TIMESTAMPDIFF(SECOND, start_time, end_time))                                                    as data,
               row_number() over (partition by level_id order by avg(TIMESTAMPDIFF(SECOND, start_time, end_time))) as rn
        from game_record_merge_user
        where situation = 0
        group by user_id, level_id)
    <include refid="SelectRankLimit"/>
  </select>

  <select id="selectMinSpendTimeRankLimit" resultType="com.zumin.sudoku.game.pojo.RankItemBO">
    WITH game_record_merge_user as (
    <include refid="SelectGameRecordWithUser"/>
    ) ,
      tmp as (
        select user_id,
               level_id,
               username,
               TIMESTAMPDIFF(SECOND, start_time, end_time)                                                    as data,
               row_number() over (partition by level_id order by TIMESTAMPDIFF(SECOND, start_time, end_time)) as rn
        from game_record_merge_user
        where situation = 0)
    <include refid="SelectRankLimit"/>
  </select>

  <select id="selectCorrectNumberRankLimit" resultType="com.zumin.sudoku.game.pojo.RankItemBO">
    WITH game_record_merge_user as (
    <include refid="SelectGameRecordWithUser"/>
    )
      , tmp as (
      select user_id,
             level_id,
             username,
             count(1)                                                         as data,
             row_number() over (partition by level_id order by count(1) desc) as rn
      from game_record_merge_user
      where situation = 0
      group by user_id, level_id
      )
    <include refid="SelectRankLimit"/>
  </select>

  <select id="selectGameInformationByUserId" resultType="com.zumin.sudoku.game.pojo.UserGameInformationVO">
    WITH game_record_merge_user as (
    <include refid="SelectGameRecordWithUser"/>
    )
      select count(1)                                                                  as total,
             count(situation = 0 or null)                                              as correct_number,
             avg(if(situation = 0, TIMESTAMPDIFF(SECOND, start_time, end_time), null)) as average_spend_time,
             min(if(situation = 0, TIMESTAMPDIFF(SECOND, start_time, end_time), null)) as min_spend_time,
             max(if(situation = 0, TIMESTAMPDIFF(SECOND, start_time, end_time), null)) as max_spend_time,
             l.name                                                                    as game_level_name
      from game_record_merge_user r
             inner join game_level l on r.level_id = l.id
      where user_id = #{userId,jdbcType=INTEGER}
      group by level_id
  </select>

  <select id="selectByUserIdOrderByStartTimeDescIgnoreGameRecord" resultMap="GameNormalRecordResultForHistoryMap">
    WITH game_record_merge_level as (
    <include refid="SelectGameRecordWithLevel"/>
    )
      select *
      from game_record_merge_level
      where user_id = #{userId,jdbcType=INTEGER}
        and game_record_id != #{ignoreGameRecordId,jdbcType=INTEGER}
      order by start_time desc
  </select>

  <select id="selectByUserIdOrderByStartTimeDesc" resultMap="GameNormalRecordResultForHistoryMap">
    WITH game_record_merge_level as (
    <include refid="SelectGameRecordWithLevel"/>
    )
      select *
      from game_record_merge_level
      where user_id = #{userId,jdbcType=INTEGER}
      order by start_time desc
  </select>
</mapper>